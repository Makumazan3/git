import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Введите два числа и оператор через пробел.");
        String numInput = scanner.nextLine();
        String[] array = numInput.split(" ");

        if (array.length < 3) {

            throw new RuntimeException("ОШИБКА! Строка не является математической операцией.");

        } else if (array.length > 3) {
            throw new Exception("ОШИБКА! Формат математической операции не удовлетворяет заданию - 2 операнда и один оператор.");
        }
        String numberOne = array[0];
        String numberTwo = array[2];
        String operator = array[1];
        calc(numberOne, numberTwo, operator);
        mistakes(numberOne, numberTwo);
    }

    public static void mistakes(String numberOne, String numberTwo) throws Exception {
        int numOne, numTwo;
        numOne = Integer.parseInt(numberOne);
        numTwo = Integer.parseInt(numberTwo);

        if ((numOne < 1 || numOne > 10) || (numTwo < 0 || numTwo > 10)) {
            throw new Exception("ОШИБКА! Нарушен диапазон вводимых чисел.");
        }
    }

    public static void calc(String numberOne, String numberTwo, String operator) {
        if (Convert.isArabian(numberOne) && Convert.isArabian(numberTwo)) {
            int numOne, numTwo;
            numOne = Integer.parseInt(numberOne);
            numTwo = Integer.parseInt(numberTwo);
            int result = ArifmethicOperations.operations(operator, numOne, numTwo);
            System.out.println(result);
        } else if (Convert.isRoman(numberOne) && Convert.isRoman(numberTwo)) {
            int numOne, numTwo;
            numOne = Convert.romanToArabian(numberOne);
            numTwo = Convert.romanToArabian(numberTwo);
            int result = ArifmethicOperations.operations(operator, numOne, numTwo);
            System.out.println(result);
        }
    }

    class Convert {

        public static String[] arabianArray = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
        public static String[] romanArray = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X"};

        public static boolean isArabian(String arabian) {
            for (int i = 0; i < arabianArray.length; i++) {
                if (arabianArray[i].equals(arabian))
                    return true;
            }
            return false;
        }

        public static boolean isRoman(String roman) {
            for (int i = 0; i < romanArray.length; i++) {
                if (romanArray[i].equals(roman))
                    return true;

            }
            return false;
        }

        public static int romanToArabian(String roman) {
            if (roman.equals("I")) {
                return 1;
            } else if (roman.equals("II")) {
                return 2;
            } else if (roman.equals("III")) {
                return 3;
            } else if (roman.equals("IV")) {
                return 4;
            } else if (roman.equals("V")) {
                return 5;
            } else if (roman.equals("VI")) {
                return 6;
            } else if (roman.equals("VII")) {
                return 7;
            } else if (roman.equals("VIII")) {
                return 8;
            } else if (roman.equals("IX")) {
                return 9;
            } else if (roman.equals("X")) {
                return 10;
            } else {
                throw new RuntimeException("ОШИБКА! Введённый символ не является ни арабским, ни римским числом.");
            }
        }

        public static String integerToRoman(int num) {

            int[] values = {100, 90, 50, 40, 10, 9, 5, 4, 1};
            String[] romanLiterals = {"C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};

            StringBuilder roman = new StringBuilder();

            for (int i = 0; i < values.length; i++) {
                while (num >= values[i]) {
                    num -= values[i];
                    roman.append(romanLiterals[i]);
                }
            }
            return roman.append(romanLiterals).toString();
        }
    }

    class ArifmethicOperations {
        public static int operations(String operator, int numOne, int numTwo) {

            switch (operator) {
                case "+":
                    return numOne + numTwo;

                case "-":
                    return numOne - numTwo;

                case "*":
                    return numOne * numTwo;

                case "/":
                    return numOne / numTwo;
            }
            throw new RuntimeException("ОШИБКА! Неправильный формат оператора.");
        }

    }
}
